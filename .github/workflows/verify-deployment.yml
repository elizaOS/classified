name: Verify Deployment

on:
  schedule:
    # Check every 6 hours that the site is up
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  verify-site:
    runs-on: ubuntu-latest
    steps:
      - name: Check Lander Site
        run: |
          echo "Checking if lander site is accessible..."
          response=$(curl -s -o /dev/null -w "%{http_code}" https://elizaos.github.io/eliza/)

          if [ "$response" = "200" ]; then
            echo "‚úÖ Lander site is accessible"
          else
            echo "‚ùå Lander site returned HTTP $response"
            exit 1
          fi

      - name: Check GitHub API Access
        run: |
          echo "Verifying GitHub API access for releases..."
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/elizaos/eliza/releases)

          if [ "$response" = "200" ]; then
            echo "‚úÖ GitHub API is accessible"
          else
            echo "‚ùå GitHub API returned HTTP $response"
            exit 1
          fi

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Deployment Verification Failed',
              body: `The deployment verification failed at ${new Date().toISOString()}.
              
              Please check:
              - GitHub Pages deployment status
              - DNS/CDN issues
              - GitHub API rate limits
              
              Workflow: ${context.workflow}
              Run: ${context.runNumber}`,
              labels: ['deployment', 'bug']
            });
